---
title: Analysis
description: The Analysis object in Semantic Events is used for internal bookkeeping of costs and resources consumed during event analysis, particularly by AI or machine learning models.
prompt: |
    Now, in the same way, write a detailed section titled "Analysis" where you explain the Analysis object available for Semantic Events.
    Always use a simple table when listing properties. Make a clear distinction between values that must be provided and values that the jitsu client automatically populates. Tabl should have these columns: "Property", "Description" and "Provided By" (User-Provided, User-Provided (Optional), Auto-Populated).
    All you output needs to be wrapped in the same markdown element. Never break out of that single markdown block. You must never add citation to any output. You must always escape everything that breaks out of the markdown mode. You must always use as single "`"when annotating special sections. I will add the other "`" on our side. You must never use ``` in your putput.
---

The `analysis` object is a specialized array within a `SemanticEvent` designed for internal bookkeeping. Its primary purpose is to track the costs and resources consumed during the analysis of an event, particularly by AI, machine learning models, or other automated processing systems.

This object allows you to meticulously log details like LLM token usage, processing time, and monetary costs associated with enriching or interpreting an event. By recording this information directly on the event, you create a transparent and auditable trail of your internal analysis-related operational costs.

**Note:** This object is intended strictly for internal use and is not meant to be populated with data related to customer transactions or commerce.

---

### Analysis Properties

An event can contain an array of `analysis` objects. Each object in the array has the following structure:

| Property | Description | Provided By |
| :--- | :--- | :--- |
| `item` | The specific analysis or task being performed. | User-Provided |
| `provider` | The service provider used for the analysis (e.g., "OpenAI", "Anthropic", "Google"). | User-Provided |
| `variant` | The specific model or version of the service used (e.g., "gpt-4-turbo", "claude-3-opus"). | User-Provided |
| `token_in` | The number of input tokens consumed by the analysis model. | User-Provided (Optional) |
| `token_out` | The number of output tokens generated by the analysis model. | User-Provided (Optional) |
| `amount` | The monetary cost of performing the analysis. | User-Provided (Optional) |
| `processing_time`| The time taken to complete the analysis, typically in seconds. | User-Provided (Optional) |
| `currency` | The currency of the `amount` field (defaults to "USD"). | User-Provided (Optional) |

---
### Example

Here is an example of what an `analysis` array might look like within a `SemanticEvent` after a customer support ticket has been summarized and classified by two different AI models.

```json
"analysis": [
  {
    "item": "Summarization",
    "provider": "OpenAI",
    "variant": "gpt-4-turbo-2024-04-09",
    "token_in": 1250,
    "token_out": 300,
    "amount": 0.0155,
    "currency": "USD",
    "processing_time": 2.5
  },
  {
    "item": "Classification",
    "provider": "Google",
    "variant": "gemini-1.5-pro-latest",
    "token_in": 1300,
    "token_out": 50,
    "amount": 0.0093,
    "currency": "USD",
    "processing_time": 1.8
  }
]
```
{% navigation previous="/docs/semantic-events/schema/processing" previousTitle="Processing Controls" next="/docs/semantic-events/advanced-concepts" nextTitle="Advanced Concepts" /%}