---
title: Involved Entities & Roles (involves field)
---

# Involved Entities & Roles (`involves` field)

The `involves` field in the Semantic Event Schema provides a structured way to explicitly list all entities that participate in an event. For each involved entity, it captures their specific role, type, identifiers, and optionally their capacity or extent of involvement.

This structure is essential for making entity participation clear and unambiguous, moving beyond implicit relationships to explicit declarations of who was involved and how. This is particularly valuable for complex events where multiple entities interact in different capacities.

The `involves` field is an array of objects, where each object represents one involved entity and its context within the event.

## Involved Entity Object Properties

The following table details the fields found within each object in the `involves` list:

| Name          | Required | Data Type | Description                                                                                                                                                                                             |
|---------------|----------|-----------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `label`       |          | `String`  | A human-readable name or label for the involved entity instance (e.g., "Primary User", "Product X123"). Originally `Nullable(String)`. This field is optional.                                          |
| `role`        |          | `String`  | The function or role of the entity in the context of this specific event. Conventionally, this value is **always capitalized** (e.g., "Buyer", "Seller", "Author", "Recipient", "Participant"). Originally `LowCardinality(String)`. |
| `entity_type` |          | `String`  | The type of the involved entity. Conventionally, this value is **always capitalized** (e.g., "User", "Product", "Organization", "Document"). Originally `LowCardinality(String)`.                       |
| `entity_gid`  |          | `UUID`    | The Global ID (GID) of the involved entity, if resolved to a canonical entity. Originally `Nullable(UUID)`. This field is optional.                                                                      |
| `id`          |          | `String`  | An alternative or external identifier for the involved entity. Originally `Nullable(String)`. This field is optional.                                                                                     |
| `id_type`     |          | `String`  | The type of the identifier provided in the `id` field (e.g., "Sku", "Email", "ExternalContractId"). Originally `LowCardinality(String)`. This field is optional.                                         |
| `capacity`    |          | `Float`   | A numeric value indicating the extent, share, or capacity of involvement for this entity in this event (e.g., 0.5 for 50% involvement, 1.0 for full involvement). Originally `Nullable(Float)`. This field is optional. |

## Understanding and Using `involves`

The `involves` structure is powerful for detailing complex interactions where multiple actors or objects play distinct parts.

**Purpose of Key Fields:**

*   **`role`**: This is a crucial field that defines *how* an entity participated in the event. It provides semantic clarity beyond just knowing an entity was present.
*   **`entity_type`**: Specifies the kind of entity involved, which, combined with `role`, gives a rich description (e.g., a "User" in the "Author" role, or a "Product" in the "ReviewedItem" role).
*   **`entity_gid`, `id`, `id_type`**: These are standard fields for uniquely identifying the involved entity, linking it back to canonical entity records or external system IDs.
*   **`capacity`**: This field allows for specifying non-binary involvement. For example, if multiple consultants contribute to a single "Consultation Provided" event, `capacity` could represent the proportion of work each contributed (e.g., Consultant A: 0.6, Consultant B: 0.4). It can also represent quantities if the role implies it (e.g., "Attendee" role with `capacity: 2` for two tickets).
*   **`label`**: Provides a quick, human-readable identifier for the entity in the context of the event, which can be useful for logging or display purposes.

## Practical Examples

### E-commerce Purchase
```javascript
jitsu.track('Order Completed', {
  involves: [
    {
      label: 'John Smith',
      role: 'Buyer',
      entity_type: 'Person',
      id: 'customer-12345',
      id_type: 'CustomerDB'
    },
    {
      label: 'Acme Electronics Store',
      role: 'Seller',
      entity_type: 'Organization',
      entity_gid: 'a1b2c3d4-e5f6-7890-1234-567890abcdef',
      id: 'store-001',
      id_type: 'StoreSystem'
    }
  ]
});
```

### B2B Contract Signing
```javascript
jitsu.track('Contract Signed', {
  involves: [
    {
      label: 'ABC Construction Inc.',
      role: 'PrimaryContractor',
      entity_type: 'LegalEntity',
      id: 'company-abc-123',
      id_type: 'BusinessRegistry'
    },
    {
      label: 'XYZ Plumbing Services',
      role: 'Subcontractor',
      entity_type: 'Organization',
      id: 'company-xyz-456',
      id_type: 'VendorDB',
      capacity: 0.3
    },
    {
      label: 'Jane Doe',
      role: 'ClientRepresentative',
      entity_type: 'Person',
      id: 'contact-789',
      id_type: 'CRM'
    }
  ]
});
```

### Supply Chain Event
```javascript
jitsu.track('Shipment Received', {
  involves: [
    {
      label: 'Global Logistics Corp',
      role: 'Carrier',
      entity_type: 'Organization',
      id: 'carrier-gl001',
      id_type: 'LogisticsSystem'
    },
    {
      label: 'Manufacturing Plant A',
      role: 'Supplier',
      entity_type: 'Organization',
      id: 'plant-a-001',
      id_type: 'ERPSystem'
    },
    {
      label: 'Distribution Center East',
      role: 'Receiver',
      entity_type: 'Organization',
      id: 'dc-east-001',
      id_type: 'WMS'
    }
  ]
});
```

### Multi-stakeholder Project Event
```javascript
jitsu.track('Project Milestone Completed', {
  involves: [
    {
      label: 'Alice Johnson',
      role: 'ProjectManager',
      entity_type: 'Person',
      id: 'emp-001',
      id_type: 'HRIS'
    },
    {
      label: 'Development Team Alpha',
      role: 'Contributor',
      entity_type: 'Organization',
      id: 'team-alpha',
      id_type: 'TeamRegistry',
      capacity: 0.7
    },
    {
      label: 'Quality Assurance Team',
      role: 'Reviewer',
      entity_type: 'Organization',
      id: 'team-qa',
      id_type: 'TeamRegistry',
      capacity: 0.3
    }
  ]
});
```

By using the `involves` array, events can accurately represent complex scenarios with multiple participating entities, each playing a distinct role and having a measurable capacity of involvement. This leads to richer data for analytics, auditing, and understanding interconnected processes.
