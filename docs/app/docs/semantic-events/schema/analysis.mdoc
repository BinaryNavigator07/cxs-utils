---
title: Analysis & Processing Metrics
---

# Analysis & Processing Metrics

The `analysis` structure captures metadata about AI/ML processing, analysis costs, and computational metrics associated with semantic events. This enables tracking of processing performance, token usage, costs, and analysis results as events move through various enrichment and analytical pipelines.

The `analysis` field is an array of analysis objects, where each object represents a specific processing or analysis step performed on the event data.

## Analysis Properties

Each analysis object contains the following properties for tracking processing metrics and costs.

| Property | Type | Required | Description |
|----------|------|----------|-------------|
| `item` | String | Yes | Analysis item, service, or model being tracked (e.g., "LLMEnrichment", "NERService", "RiskScoreModel") |
| `provider` | String | Yes | Provider of the analysis service (e.g., "OpenAI", "AWSComprehend", "InternalModelService") |
| `variant` | String | Yes | Version, model, or variant (e.g., "gpt-4", "v2.1", "high_sensitivity_config") |
| `token_in` | Integer | Yes | Number of input tokens processed (for LLM/NLP services) |
| `token_out` | Integer | Yes | Number of output tokens generated (for LLM/NLP services) |
| `amount` | Float | No | Monetary cost associated with this analysis step |
| `processing_time` | Float | No | Processing time in seconds |
| `currency` | String | No | Currency code (default: "USD") |

## Practical Examples

### LLM Content Analysis
```javascript
jitsu.track('Support Ticket Created', {
  analysis: [
    {
      item: 'ContentSummarization',
      provider: 'OpenAI',
      variant: 'gpt-4',
      token_in: 1250,
      token_out: 180,
      processing_time: 1.2,
      currency: 'USD',
      amount: 0.0045
    },
    {
      item: 'SentimentAnalysis',
      provider: 'OpenAI',
      variant: 'gpt-4',
      token_in: 800,
      token_out: 50,
      processing_time: 0.8,
      currency: 'USD',
      amount: 0.0025
    }
  ]
});
```

### Multi-Provider Analysis Pipeline
```javascript
jitsu.track('Customer Feedback Analyzed', {
  analysis: [
    {
      item: 'EntityExtraction',
      provider: 'AWSComprehend',
      variant: 'standard',
      token_in: 500,
      token_out: 75,
      processing_time: 0.3,
      currency: 'USD',
      amount: 0.0001
    },
    {
      item: 'IntentClassification',
      provider: 'InternalNLP',
      variant: 'model_v2.1',
      token_in: 500,
      token_out: 25,
      processing_time: 0.15
    },
    {
      item: 'RiskScoring',
      provider: 'InternalML',
      variant: 'fraud_detection_v3',
      token_in: 200,
      token_out: 10,
      processing_time: 0.05
    }
  ]
});
```

### Document Processing Analysis
```javascript
jitsu.track('Document Processed', {
  analysis: [
    {
      item: 'OCRExtraction',
      provider: 'GoogleVision',
      variant: 'document_text_detection',
      token_in: 0,
      token_out: 2500,
      processing_time: 2.1,
      currency: 'USD',
      amount: 0.015
    },
    {
      item: 'DocumentClassification',
      provider: 'OpenAI',
      variant: 'gpt-3.5-turbo',
      token_in: 2500,
      token_out: 100,
      processing_time: 1.5,
      currency: 'USD',
      amount: 0.008
    }
  ]
});
```

### Real-time Event Enrichment
```javascript
jitsu.track('Transaction Processed', {
  analysis: [
    {
      item: 'FraudDetection',
      provider: 'InternalML',
      variant: 'realtime_v4.2',
      token_in: 150,
      token_out: 5,
      processing_time: 0.025
    },
    {
      item: 'RiskAssessment',
      provider: 'ThirdPartyRisk',
      variant: 'enterprise_api',
      token_in: 100,
      token_out: 20,
      processing_time: 0.18,
      currency: 'USD',
      amount: 0.002
    }
  ]
});
```

### Batch Processing Analysis
```javascript
jitsu.track('Batch Analysis Completed', {
  analysis: [
    {
      item: 'CustomerSegmentation',
      provider: 'InternalML',
      variant: 'clustering_v1.8',
      token_in: 50000,
      token_out: 1000,
      processing_time: 45.2
    },
    {
      item: 'ChurnPrediction',
      provider: 'InternalML',
      variant: 'gradient_boost_v2.3',
      token_in: 30000,
      token_out: 500,
      processing_time: 28.7
    }
  ]
});
```

## Best Practices

1. **Comprehensive Tracking**: Include all relevant processing steps to get complete cost and performance visibility
2. **Accurate Token Counting**: Ensure `token_in` and `token_out` accurately reflect actual usage for cost tracking
3. **Processing Time Monitoring**: Track `processing_time` to identify bottlenecks and optimize performance
4. **Cost Attribution**: Use `amount` and `currency` fields to track and allocate processing costs
5. **Version Control**: Always specify `variant` to track which model/version was used for reproducibility
6. **Provider Consistency**: Use consistent provider names across your organization for better analytics
7. **Real-time vs Batch**: Distinguish between real-time and batch processing for different optimization strategies
